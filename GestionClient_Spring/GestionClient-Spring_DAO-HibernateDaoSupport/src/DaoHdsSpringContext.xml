<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xsi:schemaLocation="
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.0.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">


	<!-- ========== HIBERNATE CONFIGURATION ========== -->

	<context:property-placeholder location="classpath:persistence-mysql.properties" />

<!-- 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.pass}" />
	</bean>

<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
<!-- 	<property name="configLocation" value="hibernate.cfg.xml" /> -->
<!-- 	<property name="packagesToScan" value="com.noelmace.gestionclient.spring.business.entities" /> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>
		<property name="mappingLocations">
			<list>
				<value>
					classpath:/com/noelmace/gestionclient/spring/dao/hibernate/mapping/BonDeCommande.hbm.xml
				</value>
				<value>
					classpath:/com/noelmace/gestionclient/spring/dao/hibernate/mapping/Client.hbm.xml
				</value>
			</list>
		</property>
	</bean>

	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- ========== DAO HBS ========== -->

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
<!--    <property name="checkWriteOperations" value="false" /> -->
    </bean>
    
    
	<bean id="abstractDaoHds" class="com.noelmace.gestionclient.spring.dao.hds.DAOHds" abstract="true">
        <property name="hibernateTemplate" ref="hibernateTemplate"/>
	</bean>
	
	<bean id="daoClientHds" class="com.noelmace.gestionclient.spring.dao.hds.ClientDAOHds" parent="abstractDaoHds" />
	<bean id="daoBdcHds" class="com.noelmace.gestionclient.spring.dao.hds.BonDeCommandeDAOHds" parent="abstractDaoHds" />
	
		<!-- ====== Transactions ===== -->
		
		<!--  cf. http://docs.spring.io/spring/docs/3.0.x/spring-framework-reference/html/transaction.html -->
	
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
<!-- 	<property name="nestedTransactionAllowed" value="true" /> -->
	</bean>

	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all this methods are not read-only -->
			<tx:method name="create*" read-only="false" />
			<tx:method name="update*" read-only="false" />
			<tx:method name="delete*" read-only="false" />
			<!-- all methods starting with find are read-only -->
			<tx:method name="find*" read-only="true"/>
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<!-- ensure that the above transactional advice runs for any execution of 
		an operation defined by a DAO -->
	<aop:config>
		<aop:pointcut id="daoOperation"
			expression="execution(* com.noelmace.gestionclient.spring.dao.hds.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="daoOperation" />
	</aop:config>
	
	<!-- configuration par annotation @Transactionnal -->
<!-- 	<tx:annotation-driven transaction-manager="txManager"  /> -->
	
	<!-- ========== SERVICES ========== -->
	
	<bean id="abstractService" class="com.noelmace.gestionclient.spring.business.services.AbstractService" abstract="true" >
		<property name="daoBdc" ref="daoBdcHds"></property>
		<property name="daoClient" ref="daoClientHds"></property>
	</bean>
	
	<bean id="orderingService" class="com.noelmace.gestionclient.spring.business.services.OrderingService" parent="abstractService" />	
	<bean id="clientService" class="com.noelmace.gestionclient.spring.business.services.ClientService" parent="abstractService" />  

</beans>